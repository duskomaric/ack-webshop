---
import Navigation from "../../components/global/Navigation.astro";
import Footer from "../../components/global/Footer.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import WebshopTitle from "../../components/global/WebshopTitle.astro";
const servicesApi = `${import.meta.env.PUBLIC_ACK_API_EP}/api/v1/services/`;
const {id} = Astro.params;
---

<BaseLayout>
    <Navigation/>
    <WebshopTitle/>
    <section class="py-20 overflow-hidden bg-white">
        <div x-data="{
        service: {},
        formData: {
            phoneNumber: '',
            email: '',
            amount: ''
        },
        displayAmount: '',  // For displaying amount to the user

        updateAmount(displayAmount) {
            this.displayAmount = displayAmount;  // Update the displayed amount
            this.formData.amount = displayAmount * 100;  // Update the actual amount in cents
        },

        validationErrors: {
            amount: '',
            phoneNumber: '',
            email: ''
        },

        generalError: '',

        async fetchService() {
            this.service = await (await fetch(window.servicesApi + window.serviceId))
                .json()
                .then(data => data.data);
        },


        async submitForm() {
                try {
                    const response = await fetch(window.servicesApi + window.serviceId + '/buy', {
                        method: 'POST',
                        body: JSON.stringify(this.formData),
                        headers: {
                            'accept': 'application/json',
                            'Content-Type': 'application/json'
                        }
                    });

                    const result = await response.json();

                    if (response.ok) {
                        // If successful, redirect to the payment URL
                        window.location.href = result.data.transaction.browser_redirection_url;
                    } else {
                        this.validationErrors.amount = result.errors && result.errors.amount ? result.errors.amount[0] : '';
                        this.validationErrors.phoneNumber = result.errors && result.errors.phoneNumber ? result.errors.phoneNumber[0] : '';
                        this.validationErrors.email = result.errors && result.errors.email ? result.errors.email[0] : '';

                        if (result.success === false) {
                        this.generalError = result.message ? result.message : '';
                        }
                    }

                } catch (error) {
                    console.error('Error:', error);
                }
}

    }"
             x-init="fetchService()"
             class="max-w-6xl px-4 py-4 mx-auto lg:py-8 md:px-6">
            <div class="flex flex-wrap -mx-4">
                <div class="w-full px-4 md:w-1/3">
                    <img alt="" class="w-2/3 md:w-full duration-500 hover:scale-105" :src="'/services/' + service.imageName" src="">
                </div>
                <div class="w-full px-4 md:w-2/3 ">
                    <div class="lg:pl-20">
                        <div class="pb-6 mb-8 border-b border-gray-100">
                            <div class="mt-10 md:mt-0 mb-10 min-w-min">
                                <h2 class="max-w-xl mt-2 mb-6 text-xl font-bold md:text-4xl" x-text="service.name"></h2>
                                <span class="border-b-4 border-gray-200 w-1/6 block"></span>
                            </div>
                            <div class="flex flex-wrap items-center mb-6">

                                <p class="max-w-md mb-8 text-gray-600">
                                    <span class="block mb-2">Opis:</span>
                                    Lorem ispum dor amet Lorem ispum dor amet Lorem ispum dor amet Lorem ispum dor amet
                                    Lorem ispum dor amet Lorem ispum dor amet Lorem ispum dor amet Lorem ispum dor amet
                                </p>
                            </div>
                            <div class="flex flex-col gap-3 max-w-md bg-transparent rounded-lg">
                                <div>
                                    <template x-if="!service.isAmountPredefined && service.type == 'SERVICE'">
                                    <input
                                            x-model="formData.phoneNumber"
                                            type="text" id="phone_number" name="phone_number"
                                            class="w-full rounded-md border border-gray-200
                                                        text-sm shadow-sm outline-none focus:scale-105 focus:z-10
                                                       focus:border-sky-500 focus:ring-sky-500"
                                            autocomplete="tel"
                                            placeholder="Broj telefona *"/>
                                    </template>
                                    <p x-show="validationErrors.phoneNumber !== ''"
                                       class="text-red-500 text-sm mt-1"
                                       x-text="validationErrors.phoneNumber"></p>
                                </div>
                                <div>
                                    <input
                                            x-model="formData.email"
                                            type="email" id="email" name="email"
                                            class="w-full rounded-md border border-gray-200
                                                        text-sm shadow-sm outline-none focus:scale-105 focus:z-10
                                                       focus:border-sky-500 focus:ring-sky-500"
                                            autocomplete="email"
                                            placeholder="Email *"/>

                                    <p x-show="validationErrors.email !== ''"
                                       class="text-red-500 text-sm mt-1"
                                       x-text="validationErrors.email"></p>
                                </div>
                                <div>
                                    <template x-if="!service.isAmountPredefined">
                                        <input
                                                x-model="displayAmount"
                                                type="number" id="amount" name="amount"
                                                class="w-full rounded-md border border-gray-200
                                                            text-sm shadow-sm outline-none focus:scale-105 focus:z-10
                                                            focus:border-sky-500 focus:ring-sky-500"
                                                placeholder="Iznos *"
                                                x-on:input="updateAmount($event.target.value)"
                                        />
                                    </template>

                                    <template x-if="service.isAmountPredefined">
                                        <select
                                                x-model="formData.amount"
                                                name="amount"
                                                class="w-36 rounded-md border border-gray-200
                                                            text-sm shadow-sm outline-none focus:scale-105 focus:z-10
                                                            focus:border-sky-500 focus:ring-sky-500">
                                            <option value="Iznos">Iznos</option>
                                            <template x-for="amountOption in service.amountsPredefined">
                                                <option :value="amountOption" x-text="(amountOption/100).toFixed(2)"></option>
                                            </template>
                                        </select>
                                    </template>

                                    <p x-show="validationErrors.amount !== ''" class="text-red-500 text-sm mt-1"
                                       x-text="validationErrors.amount"></p>
                                </div>
                                <a class="max-w-min h-12 font-medium rounded-lg text-white
                                    focus-visible:outline-white focus:outline-none
                                    bg-red-600 duration-200 focus-visible:ring-white
                                    hover:bg-red-500 lg:w-auto px-6 py-3 cursor-pointer"
                                   @click="submitForm">
                                    Kupi
                                </a>
                                <template x-if="generalError !== ''">
                                    <p class="text-red-500 text-sm mt-1" x-text="generalError"></p>
                                </template>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="flex flex-wrap items-center px-4 mb-6 border-b border-gray-100">
                    <p class="mb-8 text-gray-600">
                        <span class="border-b-4 border-gray-200 w-1/6 block mb-10">Napomena:</span>
                        OVA USLUGA NEMA OPCIJU STORNIRANJA!
                    </p>
                </div>
            </div>
        </div>
    </section>
    <Footer/>
</BaseLayout>
<script is:inline define:vars={{servicesApi, id}}>
    window.servicesApi = servicesApi;
    window.serviceId = id;
</script>